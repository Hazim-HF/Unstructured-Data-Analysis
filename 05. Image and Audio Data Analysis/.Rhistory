print('hai')
library(textstem)
library(tidytext)
library(topicmodels)
library(tidyr)
library(ggplot2)
library(dplyr)
library(tm)
library(reshape2)
library(proxy)
library(dbscan)
library(cluster)
library(colorspace)
q4 <- DirSource("TextData")
q4_docs <- VCorpus(q4)
lda <- LDA(q4_dtm, k=3, control=list(seed=1234))
topics <- tidy(lda, matrix='beta')
q4 <- DirSource("TextData")
q4_docs <- VCorpus(q4)
toSpace <- content_transformer(function(x,pattern){
return(gsub(pattern," ", x))
})
q4_docs <- tm_map(q4_docs, content_transformer(tolower))            # Lowercase
q4_docs <- tm_map(q4_docs, removePunctuation)                       # Remove punctuation
q4_docs <- tm_map(q4_docs, removeNumbers)                           # Remove numbers
q4_docs <- tm_map(q4_docs, removeWords, stopwords("english"))       # Remove stopwords
q4_docs <- tm_map(q4_docs, content_transformer(lemmatize_strings))  # Lemmatize
q4_docs <- tm_map(q4_docs, stripWhitespace)                         # Remove extra spaces
q4_dtm <- DocumentTermMatrix(q4_docs)
lda <- LDA(q4_dtm, k=3, control=list(seed=1234))
topics <- tidy(lda, matrix='beta')
top_terms <- topics %>%
group_by(topic) %>%
top_n(10,beta) %>%
ungroup() %>%
arrange(topic,beta)
top_terms %>%
mutate(term=reorder(term,beta)) %>%
ggplot(aes(term,beta,fill=factor(topic))) +
geom_col(show.legend=F) +
facet_wrap(~ topic, scales='free') +
coord_flip()
topic1vstopic2 <- topics %>%
mutate(topic = paste0("topic", topic)) %>%
spread(topic,beta) %>%
filter(topic1 > 0.005 | topic2 > 0.005) %>%
mutate(log_ratio = log2(topic2/topic1))
topic1vstopic2 %>%
mutate(term=reorder(term,log_ratio)) %>%
ggplot(aes(term, log_ratio)) +
geom_col(show.legend=F) +
coord_flip()
topic1vstopic3 <- topics %>%
mutate(topic = paste0("topic", topic)) %>%
spread(topic,beta) %>%
filter(topic1 > 0.005 | topic3 > 0.005) %>%
mutate(log_ratio = log2(topic3/topic1))
topic1vstopic3 %>%
mutate(term=reorder(term,log_ratio)) %>%
ggplot(aes(term, log_ratio)) +
geom_col(show.legend=F) +
coord_flip()
topic2vstopic3 <- topics %>%
mutate(topic = paste0("topic", topic)) %>%
spread(topic,beta) %>%
filter(topic2 > 0.005 | topic3 > 0.005) %>%
mutate(log_ratio = log2(topic3/topic2))
topic2vstopic3 %>%
mutate(term=reorder(term,log_ratio)) %>%
ggplot(aes(term, log_ratio)) +
geom_col(show.legend=F) +
coord_flip()
dtm.tfidf <- weightTfIdf(q4_dtm)
dtm.tfidf <- removeSparseTerms(dtm.tfidf,0.999)
tfidf.matrix <- as.matrix(dtm.tfidf)
dist.matrix <- dist(tfidf.matrix, method = 'cosine')
truth.K=4
clustering.kmeans<- kmeans(tfidf.matrix , truth.K)
clustering.hierarchical <-hclust(dist.matrix , method = "ward.D2")
clustering.dbscan <-hdbscan(dist.matrix , minPts=10)
master.cluster <- clustering.kmeans$cluster
slave.hierarchical <- cutree(clustering.hierarchical, k = truth.K)
slave.dbscan <- clustering.dbscan$cluster
points <- cmdscale(dist.matrix, k = 4)
palette <- diverge_hcl(truth.K) # Creating a color palette
plot(points, main = 'K-Means Clustering', col = as.factor(master.cluster),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
plot(points, main = 'Hierarchical Clustering', col = as.factor(slave.hierarchical),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
plot(points, main = 'Densty-based Clustering', col = as.factor(slave.dbscan),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
clusplot(as.matrix(dist.matrix),clustering.kmeans$cluster,color=T,shade=T,labels=2,lines=0)
plot(clustering.hierarchical, cex = 0.6)
rect.hclust(clustering.hierarchical,4)
plot(as.matrix(dist.matrix),col=clustering.dbscan$cluster+1L)
par(mfrow=c(3,1))
plot(points, main = 'K-Means Clustering', col = as.factor(master.cluster),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
plot(points, main = 'Hierarchical Clustering', col = as.factor(slave.hierarchical),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
plot(points, main = 'Densty-based Clustering', col = as.factor(slave.dbscan),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
par(mfrow=c(3,1))
fig.dim=c(8,20)
plot(points, main = 'K-Means Clustering', col = as.factor(master.cluster),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
plot(points, main = 'Hierarchical Clustering', col = as.factor(slave.hierarchical),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
plot(points, main = 'Densty-based Clustering', col = as.factor(slave.dbscan),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
par(mfrow=c(3,1), fig=c(0,1,0,1.5))
plot(points, main = 'K-Means Clustering', col = as.factor(master.cluster),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
plot(points, main = 'Hierarchical Clustering', col = as.factor(slave.hierarchical),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
plot(points, main = 'Densty-based Clustering', col = as.factor(slave.dbscan),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
par(mfrow=c(3,1), fig=c(0, 1, 0, 1.5))
plot(points, main = 'K-Means Clustering', col = as.factor(master.cluster),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
plot(points, main = 'Hierarchical Clustering', col = as.factor(slave.hierarchical),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
plot(points, main = 'Densty-based Clustering', col = as.factor(slave.dbscan),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
par(mfrow=c(1,1))
plot(points, main = 'K-Means Clustering', col = as.factor(master.cluster),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
plot(points, main = 'Hierarchical Clustering', col = as.factor(slave.hierarchical),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
plot(points, main = 'Densty-based Clustering', col = as.factor(slave.dbscan),
mai = c(0,0,0,0), mar = c(0,0,0,0),
xaxt = 'n', yaxt = 'n', xlab = '', ylab ='')
table(master.cluster)
table(slave.hierarchical)
table(slave.dbscan)
library(tm)
library(SnowballC)
library(wordcloud)
library(RColorBrewer)
library(syuzhet)
library(ggplot2)
library(tidyverse)
library(tidytext)
library(textclean)
reviews <- readLines("reviews.csv")
syuzhet_vector <- get_sentiment(reviews, method="syuzhet")
summary(syuzhet_vector)
bing_vector <- get_sentiment(reviews, method="bing")
summary(bing_vector)
reviews <- readLines("reviews.csv")
reviews <- readLines("reviews.csv")
afinn_vector <- get_sentiment(reviews, method="afinn")
summary(afinn_vector)
rbind(
sign(head(syuzhet_vector,10)),
sign(head(bing_vector, 10)),
sign(head(afinn_vector, 10))
)
d<-get_nrc_sentiment(reviews)
td<-data.frame(t(d)) #transpose
td_new <- data.frame(rowSums(td)) #The function rowSums computes column sums across rows for each level of a grouping variable.
names(td_new)[1] <- "count" #Transformation and cleaning
td_new <- cbind("sentiment" = rownames(td_new), td_new)
rownames(td_new) <- NULL
td_new2<-td_new[1:8,]
quickplot(sentiment, data=td_new2, weight=count, geom="bar",fill=sentiment,ylab="count")+ggtitle("Review sentiments")
